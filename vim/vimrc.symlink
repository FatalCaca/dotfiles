let mapleader = ","

" Vundle {

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'kien/ctrlp.vim'
Plugin 'Shougo/neocomplete.vim'
Plugin 'spf13/PIV'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" }

" Caca {

    set expandtab
    set tabstop=4
    set shiftwidth=4

    set background=dark
    filetype plugin indent on   " Automatically detect file types.
    syntax on                   " Syntax highlighting
    set mouse=a                 " Automatically enable mouse usage
    set mousehide               " Hide the mouse cursor while typing
    scriptencoding utf-8

    if has('clipboard')
        if has('unnamedplus')  " When possible use + register for copy-paste
            set clipboard=unnamed,unnamedplus
        else         " On mac and Windows, use * register for copy-paste
            set clipboard=unnamed
        endif
    endif

    set history=1000                    " Store a ton of history (default is 20)
    set spell                           " Spell checking on
    set hidden                          " Allow buffer switching without saving
    set iskeyword-=.                    " '.' is an end of word designator
    set iskeyword-=#                    " '#' is an end of word designator
    set iskeyword-=-                    " '-' is an end of word designator

        " Setting up the directories {
        set backup                  " Backups are nice ...
        if has('persistent_undo')
            set undofile                " So is persistent undo ...
            set undolevels=1000         " Maximum number of changes that can be undone
            set undoreload=10000        " Maximum number lines to save for undo on a buffer reload
        endif

        " To disable views add the following to your .vimrc.before.local file:
        "   let g:spf13_no_views = 1
        if !exists('g:spf13_no_views')
            " Add exclusions to mkview and loadview
            " eg: *.*, svn-commit.tmp
            let g:skipview_files = [
                \ '\[example pattern\]'
                \ ]
        endif
    " }


nnoremap S <C-]>

nnoremap t j
nnoremap s k
vnoremap t j
vnoremap s k

nnoremap é w
nnoremap É W
nnoremap dé dw
nnoremap yé yw
nnoremap cé cw
nnoremap caé caw
nnoremap cié cis
nnoremap daé daw
nnoremap dié dis
nnoremap yaé yaw
nnoremap yié yis

nnoremap $ *
nnoremap * $

inoremap <c-U> <esc>viwUea
nnoremap <c-U> <esc>bveUel

nnoremap <leader>ev :vsplit ~/.dotfiles/vim/vimrc.symlink<cr>
nnoremap <leader>sv :source ~/.dotfiles/vim/vimrc.symlink<cr>

iabbrev @@ simon.ballu@gmail.com


nnoremap <leader>" viw<esc>a"<esc>hbi"<esc>lel
nnoremap <leader>' viw<esc>a'<esc>hbi'<esc>lel

autocmd FileType javascript nnoremap <buffer> <leader>c I//<esc>
autocmd FileType python     nnoremap <buffer> <leader>c I#<esc>

onoremap p i(
onoremap ib i(

onoremap lp :<c-u>normal! F)vi(<cr>
onoremap np :<c-u>normal! f(vi)<cr>
onoremap lb :<c-u>normal! F]vi[<cr>
onoremap nb :<c-u>normal! f[vi]<cr>
onoremap lc :<c-u>normal! F}vi{<cr>
onoremap nc :<c-u>normal! f{vi}<cr>

inoremap lkj <esc>
inoremap gq <esc>

set nobackup
set noswapfile
set pastetoggle=F12

set nofoldenable

inoremap <c-r> <Plug>(snipMateNextOrTrigger)
let g:spf13_no_omni_complete = 1

" }
